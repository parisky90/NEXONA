"""Add multi-tenancy models and company_id to existing models

Revision ID: 7a3eb9181a0b
Revises: ff1e22b0d9a0
Create Date: 2025-05-13 09:22:07.911224

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '7a3eb9181a0b'
down_revision = 'ff1e22b0d9a0'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('companies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=120), nullable=False),
    sa.Column('owner_user_id', sa.Integer(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['owner_user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_companies_name'), ['name'], unique=True)

    op.create_table('company_settings',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('rejection_email_template', sa.Text(), nullable=True),
    sa.Column('reminder_email_template', sa.Text(), nullable=True),
    sa.Column('interview_invitation_email_template', sa.Text(), nullable=True),
    sa.Column('interview_reminder_timing_minutes', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id')
    )
    with op.batch_alter_table('company_settings', schema=None) as batch_op:
        batch_op.create_index(batch_op.f('ix_company_settings_company_id'), ['company_id'], unique=True)

    with op.batch_alter_table('candidates', schema=None) as batch_op:
        batch_op.add_column(sa.Column('company_id', sa.Integer(), nullable=False))
        batch_op.alter_column('candidate_confirmation_status',
               existing_type=sa.VARCHAR(length=50),
               comment=None,
               existing_comment="Status of candidate's confirmation for the scheduled interview",
               existing_nullable=True)
        batch_op.alter_column('confirmation_uuid',
               existing_type=sa.VARCHAR(length=36),
               comment=None,
               existing_comment='Unique identifier for interview confirmation links',
               existing_nullable=True)
        batch_op.create_index(batch_op.f('ix_candidates_company_id'), ['company_id'], unique=False)
        batch_op.create_unique_constraint('uq_candidate_email_company', ['email', 'company_id'])
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'])

    with op.batch_alter_table('positions', schema=None) as batch_op:
        batch_op.add_column(sa.Column('company_id', sa.Integer(), nullable=False))
        batch_op.drop_index('ix_positions_position_name')
        batch_op.create_index(batch_op.f('ix_positions_position_name'), ['position_name'], unique=False)
        batch_op.create_index(batch_op.f('ix_positions_company_id'), ['company_id'], unique=False)
        batch_op.create_unique_constraint('uq_position_name_company', ['position_name', 'company_id'])
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'])

    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('company_id', sa.Integer(), nullable=True))
        batch_op.add_column(sa.Column('role', sa.String(length=50), nullable=False))
        batch_op.alter_column('confirmed_on',
               existing_type=postgresql.TIMESTAMP(),
               type_=sa.DateTime(timezone=True),
               existing_nullable=True)
        batch_op.create_foreign_key(None, 'companies', ['company_id'], ['id'])
        batch_op.drop_column('is_admin')
        batch_op.drop_column('enable_interview_reminders')
        batch_op.drop_column('reminder_lead_time_minutes')
        batch_op.drop_column('is_approved_account')
        batch_op.drop_column('email_interview_reminders')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('users', schema=None) as batch_op:
        batch_op.add_column(sa.Column('email_interview_reminders', sa.BOOLEAN(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('is_approved_account', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('reminder_lead_time_minutes', sa.INTEGER(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('enable_interview_reminders', sa.BOOLEAN(), autoincrement=False, nullable=False))
        batch_op.add_column(sa.Column('is_admin', sa.BOOLEAN(), server_default=sa.text('false'), autoincrement=False, nullable=False))
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.alter_column('confirmed_on',
               existing_type=sa.DateTime(timezone=True),
               type_=postgresql.TIMESTAMP(),
               existing_nullable=True)
        batch_op.drop_column('role')
        batch_op.drop_column('company_id')

    with op.batch_alter_table('positions', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint('uq_position_name_company', type_='unique')
        batch_op.drop_index(batch_op.f('ix_positions_company_id'))
        batch_op.drop_index(batch_op.f('ix_positions_position_name'))
        batch_op.create_index('ix_positions_position_name', ['position_name'], unique=True)
        batch_op.drop_column('company_id')

    with op.batch_alter_table('candidates', schema=None) as batch_op:
        batch_op.drop_constraint(None, type_='foreignkey')
        batch_op.drop_constraint('uq_candidate_email_company', type_='unique')
        batch_op.drop_index(batch_op.f('ix_candidates_company_id'))
        batch_op.alter_column('confirmation_uuid',
               existing_type=sa.VARCHAR(length=36),
               comment='Unique identifier for interview confirmation links',
               existing_nullable=True)
        batch_op.alter_column('candidate_confirmation_status',
               existing_type=sa.VARCHAR(length=50),
               comment="Status of candidate's confirmation for the scheduled interview",
               existing_nullable=True)
        batch_op.drop_column('company_id')

    with op.batch_alter_table('company_settings', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_company_settings_company_id'))

    op.drop_table('company_settings')
    with op.batch_alter_table('companies', schema=None) as batch_op:
        batch_op.drop_index(batch_op.f('ix_companies_name'))

    op.drop_table('companies')
    # ### end Alembic commands ###
