"""Initial migration based on restored models

Revision ID: 4acc1cdd82ed
Revises:
Create Date: 2025-04-17 20:09:43.166000

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '4acc1cdd82ed'
down_revision = None # This is the first migration
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('candidates',
        sa.Column('candidate_id', sa.String(length=36), nullable=False),
        sa.Column('first_name', sa.String(length=100), nullable=True),
        sa.Column('last_name', sa.String(length=100), nullable=True),
        sa.Column('email', sa.String(length=255), nullable=True),
        sa.Column('phone_number', sa.String(length=50), nullable=True),
        sa.Column('age', sa.Integer(), nullable=True),
        sa.Column('cv_original_filename', sa.String(length=255), nullable=False),
        sa.Column('cv_storage_path', sa.String(length=512), nullable=False),
        sa.Column('education', sa.Text(), nullable=True),
        sa.Column('work_experience', sa.Text(), nullable=True),
        sa.Column('languages', sa.Text(), nullable=True),
        sa.Column('seminars', sa.Text(), nullable=True),
        sa.Column('submission_date', sa.DateTime(timezone=True), nullable=True),
        sa.Column('current_status', sa.String(length=50), nullable=False),
        sa.Column('notes', sa.Text(), nullable=True),
        sa.Column('history', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
        sa.Column('interview_datetime', sa.DateTime(timezone=True), nullable=True),
        sa.Column('interview_location', sa.String(length=255), nullable=True),
        sa.Column('evaluation_rating', sa.String(length=50), nullable=True),
        sa.Column('offer_details', sa.Text(), nullable=True),
        sa.Column('offer_response_date', sa.DateTime(timezone=True), nullable=True),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
        sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint('candidate_id'),
        sa.UniqueConstraint('cv_storage_path')
    )
    op.create_index(op.f('ix_candidates_current_status'), 'candidates', ['current_status'], unique=False)
    op.create_index(op.f('ix_candidates_email'), 'candidates', ['email'], unique=False)
    op.create_index(op.f('ix_candidates_submission_date'), 'candidates', ['submission_date'], unique=False)

    op.create_table('positions',
        sa.Column('position_id', sa.Integer(), nullable=False),
        sa.Column('position_name', sa.String(length=255), nullable=False),
        sa.PrimaryKeyConstraint('position_id')
    )
    op.create_index(op.f('ix_positions_position_name'), 'positions', ['position_name'], unique=True)

    op.create_table('users',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('username', sa.String(length=64), nullable=False),
        sa.Column('email', sa.String(length=120), nullable=False),
        sa.Column('password_hash', sa.String(length=256), nullable=True),
        sa.Column('enable_interview_reminders', sa.Boolean(), nullable=False),
        sa.Column('reminder_lead_time_minutes', sa.Integer(), nullable=False),
        sa.Column('email_interview_reminders', sa.Boolean(), nullable=False),
        sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)

    op.create_table('candidate_position_association',
        sa.Column('candidate_id', sa.String(length=36), nullable=False),
        sa.Column('position_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['candidate_id'], ['candidates.candidate_id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['position_id'], ['positions.position_id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('candidate_id', 'position_id')
    )

    # --- COMMENTED OUT DROP COMMANDS ---
    # op.drop_index('ix_position_position_name', table_name='position')
    # op.drop_table('position')
    # op.drop_table('candidate_position')
    # op.drop_index('ix_candidate_user_id', table_name='candidate')
    # op.drop_index('ix_candidate_current_status', table_name='candidate')
    # op.drop_table('candidate')
    # op.drop_index('ix_user_username', table_name='user')
    # op.drop_index('ix_user_email', table_name='user')
    # op.drop_table('user')
    # --- END COMMENTED OUT ---

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###

    # --- LEAVING CREATE COMMANDS IN DOWNGRADE (comment out if they cause issues) ---
    # If you uncomment the drop commands above, you might need these corresponding creates
    # op.create_table('user',
    # sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('user_id_seq'::regclass)"), autoincrement=True, nullable=False),
    # sa.Column('username', sa.VARCHAR(length=64), autoincrement=False, nullable=False),
    # sa.Column('email', sa.VARCHAR(length=120), autoincrement=False, nullable=False),
    # sa.Column('password_hash', sa.VARCHAR(length=256), autoincrement=False, nullable=True),
    # sa.PrimaryKeyConstraint('id', name='user_pkey')
    # )
    # op.create_index('ix_user_email', 'user', ['email'], unique=True)
    # op.create_index('ix_user_username', 'user', ['username'], unique=True)
    # op.create_table('candidate',
    # sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('candidate_id_seq'::regclass)"), autoincrement=True, nullable=False),
    # sa.Column('first_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    # sa.Column('last_name', sa.VARCHAR(length=100), autoincrement=False, nullable=True),
    # sa.Column('email', sa.VARCHAR(length=255), autoincrement=False, nullable=True),
    # sa.Column('phone', sa.VARCHAR(length=50), autoincrement=False, nullable=True),
    # sa.Column('cv_filename', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    # sa.Column('cv_filepath', sa.VARCHAR(length=512), autoincrement=False, nullable=False),
    # sa.Column('submission_date', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True),
    # sa.Column('user_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('notes', sa.TEXT(), autoincrement=False, nullable=True),
    # sa.Column('current_status', sa.VARCHAR(length=50), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['user_id'], ['user.id'], name='candidate_user_id_fkey'),
    # sa.PrimaryKeyConstraint('id', name='candidate_pkey'),
    # sa.UniqueConstraint('cv_filepath', name='candidate_cv_filepath_key')
    # )
    # op.create_index('ix_candidate_user_id', 'candidate', ['user_id'], unique=False)
    # op.create_index('ix_candidate_current_status', 'candidate', ['current_status'], unique=False)
    # op.create_table('candidate_position',
    # sa.Column('candidate_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.Column('position_id', sa.INTEGER(), autoincrement=False, nullable=False),
    # sa.ForeignKeyConstraint(['candidate_id'], ['candidate.id'], name='candidate_position_candidate_id_fkey'),
    # sa.ForeignKeyConstraint(['position_id'], ['position.id'], name='candidate_position_position_id_fkey'),
    # sa.PrimaryKeyConstraint('candidate_id', 'position_id', name='candidate_position_pkey')
    # )
    # op.create_table('position',
    # sa.Column('id', sa.INTEGER(), server_default=sa.text("nextval('position_id_seq'::regclass)"), autoincrement=True, nullable=False),
    # sa.Column('position_name', sa.VARCHAR(length=255), autoincrement=False, nullable=False),
    # sa.PrimaryKeyConstraint('id', name='position_pkey')
    # )
    # op.create_index('ix_position_position_name', 'position', ['position_name'], unique=True)
    # --- END CREATE COMMANDS IN DOWNGRADE ---


    op.drop_table('candidate_position_association')

    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')

    op.drop_index(op.f('ix_positions_position_name'), table_name='positions')
    op.drop_table('positions')

    op.drop_index(op.f('ix_candidates_submission_date'), table_name='candidates')
    op.drop_index(op.f('ix_candidates_email'), table_name='candidates')
    op.drop_index(op.f('ix_candidates_current_status'), table_name='candidates')
    op.drop_table('candidates')

    # ### end Alembic commands ###