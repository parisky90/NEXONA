"""Add Branch model,associations ,and update Candidate/Company for branches

Revision ID: 910b4da24188
Revises: 289bddbf66e9
Create Date: 2025-05-20 21:18:18.784611

"""
from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = '910b4da24188'
down_revision = '289bddbf66e9'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('branches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=150), nullable=False),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('address', sa.String(length=255), nullable=True),
    sa.Column('company_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['company_id'], ['companies.id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name', 'company_id', name='uq_branch_name_company_id')
    )
    op.create_table('candidate_branch_association',
    sa.Column('candidate_id', sa.UUID(), nullable=False),
    sa.Column('branch_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['branch_id'], ['branches.id'], ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.candidate_id'], ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('candidate_id', 'branch_id'),
    sa.UniqueConstraint('candidate_id', 'branch_id', name='uq_candidate_branch')
    )
    with op.batch_alter_table('candidate_position_association', schema=None) as batch_op:
        batch_op.create_unique_constraint('uq_candidate_position', ['candidate_id', 'position_id'])

    with op.batch_alter_table('candidates', schema=None) as batch_op:
        batch_op.drop_constraint('candidates_confirmation_uuid_key', type_='unique')
        batch_op.drop_column('confirmation_uuid')
        batch_op.drop_column('interview_datetime')
        batch_op.drop_column('interview_type')
        batch_op.drop_column('interview_location')
        batch_op.drop_column('interviewers')

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('candidates', schema=None) as batch_op:
        batch_op.add_column(sa.Column('interviewers', postgresql.JSONB(astext_type=sa.Text()), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('interview_location', sa.VARCHAR(length=255), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('interview_type', sa.VARCHAR(length=100), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('interview_datetime', postgresql.TIMESTAMP(timezone=True), autoincrement=False, nullable=True))
        batch_op.add_column(sa.Column('confirmation_uuid', sa.UUID(), autoincrement=False, nullable=False))
        batch_op.create_unique_constraint('candidates_confirmation_uuid_key', ['confirmation_uuid'], postgresql_nulls_not_distinct=False)

    with op.batch_alter_table('candidate_position_association', schema=None) as batch_op:
        batch_op.drop_constraint('uq_candidate_position', type_='unique')

    op.drop_table('candidate_branch_association')
    op.drop_table('branches')
    # ### end Alembic commands ###
