"""updates_after_major_routes_refactor

Revision ID: cbb350fd4970 # ΑΝΤΙΚΑΤΑΣΤΗΣΕ ΤΟ ΜΕ ΤΟ ΔΙΚΟ ΣΟΥ REVISION ID
Revises: # ΑΣΕ ΤΟ ΚΕΝΟ ΑΝ ΕΙΝΑΙ ΤΟ ΠΡΩΤΟ MIGRATION, ΑΛΛΙΩΣ ΒΑΛΕ ΤΟ ID ΤΟΥ ΠΡΟΗΓΟΥΜΕΝΟΥ
Create Date: YYYY-MM-DD HH:MM:SS.MS # ΗΜΕΡΟΜΗΝΙΑ ΔΗΜΙΟΥΡΓΙΑΣ

"""
from alembic import op
import sqlalchemy as sa

# Αν χρησιμοποιείς PostgreSQL και θέλεις JSONB ρητά:
# from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = 'cbb350fd4970'  # ΑΝΤΙΚΑΤΑΣΤΗΣΕ ΤΟ ΜΕ ΤΟ ΔΙΚΟ ΣΟΥ REVISION ID
down_revision = None  # None αν είναι το πρώτο migration
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - START ###
    # (Η Alembic μπορεί να έχει προσθέσει op.f() για ονόματα constraints/indexes)

    # 1. Δημιουργία πινάκων που δεν έχουν εξαρτήσεις ή των οποίων οι εξαρτήσεις θα προστεθούν μετά
    op.create_table('users',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('username', sa.String(length=64), nullable=False),
                    sa.Column('email', sa.String(length=120), nullable=False),
                    sa.Column('password_hash', sa.String(length=256), nullable=True),
                    sa.Column('company_id', sa.Integer(), nullable=True),  # FK θα προστεθεί μετά
                    sa.Column('is_active', sa.Boolean(), nullable=False, server_default=sa.text('false')),
                    sa.Column('role', sa.String(length=50), nullable=False, server_default='user'),
                    sa.Column('enable_email_interview_reminders', sa.Boolean(), nullable=False,
                              server_default=sa.text('true')),
                    sa.Column('interview_reminder_lead_time_minutes', sa.Integer(), nullable=False,
                              server_default=sa.text('60')),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=True),
                    sa.Column('confirmed_on', sa.DateTime(timezone=True), nullable=True),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_users'))
                    )
    op.create_index(op.f('ix_users_email'), 'users', ['email'], unique=True)
    op.create_index(op.f('ix_users_username'), 'users', ['username'], unique=True)
    # Δεν χρειάζεται index για το company_id εδώ αν το FK θα έχει δικό του index (συχνά default συμπεριφορά)

    op.create_table('companies',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('name', sa.String(length=120), nullable=False),
                    sa.Column('owner_user_id', sa.Integer(), nullable=True),  # FK θα προστεθεί μετά
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.func.now(),
                              onupdate=sa.func.now(), nullable=True),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_companies'))
                    )
    op.create_index(op.f('ix_companies_name'), 'companies', ['name'], unique=True)

    # 2. Δημιουργία πινάκων που εξαρτώνται από τους παραπάνω
    op.create_table('company_settings',
                    sa.Column('id', sa.Integer(), nullable=False),
                    sa.Column('company_id', sa.Integer(), nullable=False),
                    sa.Column('rejection_email_template', sa.Text(), nullable=True),
                    sa.Column('interview_invitation_email_template', sa.Text(), nullable=True),
                    sa.Column('default_interview_reminder_timing_minutes', sa.Integer(), nullable=False,
                              server_default=sa.text('60')),
                    sa.Column('enable_reminders_feature_for_company', sa.Boolean(), nullable=False,
                              server_default=sa.text('true')),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.func.now(),
                              onupdate=sa.func.now(), nullable=True),
                    sa.ForeignKeyConstraint(['company_id'], ['companies.id'],
                                            name=op.f('fk_company_settings_company_id_companies'), ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('id', name=op.f('pk_company_settings')),
                    sa.UniqueConstraint('company_id', name=op.f('uq_company_settings_company_id'))
                    )
    # op.create_index(op.f('ix_company_settings_company_id'), 'company_settings', ['company_id'], unique=True) # Αντί για UniqueConstraint

    op.create_table('positions',
                    sa.Column('position_id', sa.Integer(), nullable=False),
                    sa.Column('company_id', sa.Integer(), nullable=False),
                    sa.Column('position_name', sa.String(length=255), nullable=False),
                    sa.Column('description', sa.Text(), nullable=True),
                    sa.Column('status', sa.String(length=50), nullable=False, server_default='Open'),
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.func.now(),
                              onupdate=sa.func.now(), nullable=True),
                    sa.ForeignKeyConstraint(['company_id'], ['companies.id'],
                                            name=op.f('fk_positions_company_id_companies')),
                    sa.PrimaryKeyConstraint('position_id', name=op.f('pk_positions')),
                    sa.UniqueConstraint('position_name', 'company_id',
                                        name=op.f('uq_positions_position_name_company_id'))
                    )
    op.create_index(op.f('ix_positions_company_id'), 'positions', ['company_id'], unique=False)
    op.create_index(op.f('ix_positions_position_name'), 'positions', ['position_name'], unique=False)

    op.create_table('candidates',
                    sa.Column('candidate_id', sa.String(length=36), nullable=False),
                    sa.Column('company_id', sa.Integer(), nullable=False),
                    sa.Column('first_name', sa.String(length=100), nullable=True),
                    sa.Column('last_name', sa.String(length=100), nullable=True),
                    sa.Column('email', sa.String(length=255), nullable=True),
                    sa.Column('phone_number', sa.String(length=50), nullable=True),
                    sa.Column('age', sa.Integer(), nullable=True),
                    sa.Column('cv_original_filename', sa.String(length=255), nullable=True),
                    sa.Column('cv_storage_path', sa.String(length=512), nullable=True),
                    sa.Column('education_summary', sa.Text(), nullable=True),
                    sa.Column('experience_summary', sa.Text(), nullable=True),
                    sa.Column('skills_summary', sa.Text(), nullable=True),
                    sa.Column('languages', sa.Text(), nullable=True),
                    sa.Column('seminars', sa.Text(), nullable=True),
                    sa.Column('submission_date', sa.DateTime(timezone=True), server_default=sa.func.now(),
                              nullable=True),
                    sa.Column('current_status', sa.String(length=50), nullable=False, server_default='New'),
                    sa.Column('notes', sa.Text(), nullable=True),
                    sa.Column('history', sa.JSON(), nullable=True),
                    # Για PostgreSQL, μπορείς να χρησιμοποιήσεις postgresql.JSONB
                    sa.Column('interview_datetime', sa.DateTime(timezone=True), nullable=True),
                    sa.Column('interview_location', sa.String(length=255), nullable=True),
                    sa.Column('interview_type', sa.String(length=100), nullable=True),
                    sa.Column('interviewers', sa.JSON(), nullable=True),
                    # Για PostgreSQL, μπορείς να χρησιμοποιήσεις postgresql.JSONB
                    sa.Column('candidate_confirmation_status', sa.String(length=50), nullable=True,
                              server_default='Pending'),
                    sa.Column('confirmation_uuid', sa.String(length=36), nullable=True),
                    # Θα έπρεπε να έχει default factory στο model
                    sa.Column('evaluation_rating', sa.String(length=50), nullable=True),
                    sa.Column('offers', sa.JSON(), nullable=True),
                    # Για PostgreSQL, μπορείς να χρησιμοποιήσεις postgresql.JSONB
                    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.func.now(), nullable=True),
                    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.func.now(),
                              onupdate=sa.func.now(), nullable=True),
                    sa.ForeignKeyConstraint(['company_id'], ['companies.id'],
                                            name=op.f('fk_candidates_company_id_companies')),
                    sa.PrimaryKeyConstraint('candidate_id', name=op.f('pk_candidates')),
                    sa.UniqueConstraint('cv_storage_path', name=op.f('uq_candidates_cv_storage_path')),
                    sa.UniqueConstraint('confirmation_uuid', name=op.f('uq_candidates_confirmation_uuid')),
                    sa.UniqueConstraint('email', 'company_id', name=op.f('uq_candidates_email_company_id'))
                    # uq για email ανά εταιρεία
                    )
    op.create_index(op.f('ix_candidates_candidate_confirmation_status'), 'candidates',
                    ['candidate_confirmation_status'], unique=False)
    op.create_index(op.f('ix_candidates_company_id'), 'candidates', ['company_id'], unique=False)
    op.create_index(op.f('ix_candidates_current_status'), 'candidates', ['current_status'], unique=False)
    op.create_index(op.f('ix_candidates_email'), 'candidates', ['email'],
                    unique=False)  # Index για γρήγορη αναζήτηση email
    op.create_index(op.f('ix_candidates_submission_date'), 'candidates', ['submission_date'], unique=False)

    op.create_table('candidate_position_association',
                    sa.Column('candidate_id', sa.String(length=36), nullable=False),
                    sa.Column('position_id', sa.Integer(), nullable=False),
                    sa.ForeignKeyConstraint(['candidate_id'], ['candidates.candidate_id'],
                                            name=op.f('fk_candidate_position_association_candidate_id_candidates'),
                                            ondelete='CASCADE'),
                    sa.ForeignKeyConstraint(['position_id'], ['positions.position_id'],
                                            name=op.f('fk_candidate_position_association_position_id_positions'),
                                            ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint('candidate_id', 'position_id',
                                            name=op.f('pk_candidate_position_association'))
                    )

    # 3. Προσθήκη των Foreign Keys που έλειπαν (κυκλικές εξαρτήσεις)
    op.create_foreign_key(
        op.f('fk_users_company_id_companies'),  # Όνομα constraint
        'users',  # Πίνακας προέλευσης (source table)
        'companies',  # Πίνακας αναφοράς (referent table)
        ['company_id'],  # Στήλες στον source table
        ['id']  # Στήλες στον referent table
    )
    op.create_foreign_key(
        op.f('fk_companies_owner_user_id_users'),
        'companies',
        'users',
        ['owner_user_id'],
        ['id']
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - START ###
    # Η σειρά εδώ πρέπει να είναι η ακριβώς αντίστροφη από το upgrade,
    # ξεκινώντας από την αφαίρεση των constraints που προστέθηκαν τελευταία.

    op.drop_constraint(op.f('fk_companies_owner_user_id_users'), 'companies', type_='foreignkey')
    op.drop_constraint(op.f('fk_users_company_id_companies'), 'users', type_='foreignkey')

    op.drop_table('candidate_position_association')

    op.drop_index(op.f('ix_candidates_submission_date'), table_name='candidates')
    op.drop_index(op.f('ix_candidates_email'), table_name='candidates')
    op.drop_index(op.f('ix_candidates_current_status'), table_name='candidates')
    op.drop_index(op.f('ix_candidates_company_id'), table_name='candidates')
    op.drop_index(op.f('ix_candidates_candidate_confirmation_status'), table_name='candidates')
    op.drop_table('candidates')

    op.drop_index(op.f('ix_positions_position_name'), table_name='positions')
    op.drop_index(op.f('ix_positions_company_id'), table_name='positions')
    op.drop_table('positions')

    # op.drop_index(op.f('ix_company_settings_company_id'), table_name='company_settings') # Αντί για UniqueConstraint
    op.drop_table('company_settings')

    op.drop_index(op.f('ix_companies_name'), table_name='companies')
    op.drop_table('companies')

    op.drop_index(op.f('ix_users_username'), table_name='users')
    op.drop_index(op.f('ix_users_email'), table_name='users')
    op.drop_table('users')
    # ### end Alembic commands ###